#!/bin/sh /etc/rc.common
# Copyright (C) 2015 OpenWrt.org

START=80

USE_PROCD=1

G_OPTS="daemon off; worker_processes $(grep -c '^processor\s*:' /proc/cpuinfo);"

NGINX_UTIL="/usr/bin/nginx-util"

eval $("${NGINX_UTIL}" get_env)

CONF=""


limited_wait() {
	local seconds # retry for up to a minute:
	for seconds in 0 1 1 1 2 2 3 4 5 7 9 11 14
	do eval "$1 2>/dev/null" && return 0; sleep "${seconds}"
	done
	return 1
}


boot() {
	limited_wait 'ubus list "network.interface.lan" >/dev/null && \
		ubus list "network.interface.loopback" >/dev/null'
	start
}


nginx_init() {
	[ -z "${CONF}" ] || return # already called.

	[ -d /var/log/nginx ] || mkdir -p /var/log/nginx
	[ -d /var/lib/nginx ] || mkdir -p /var/lib/nginx
	rm -f "$(readlink "${UCI_CONF}")"

	${NGINX_UTIL} init_lan

	if [ -e "${UCI_CONF}" ]
	then CONF="${UCI_CONF}"
	else CONF="${NGINX_CONF}"
	fi

	local success="using ${CONF} (as the test is ok)"

	local message
	message="$(/usr/sbin/nginx -t -c "${CONF}" -g "${G_OPTS}" 2>&1)" ||
	{
		echo -e "${message}" | grep -q ' syntax is ok$' &&
		echo "error using ${CONF} but syntax is ok: retrying ..." >&2 &&
		limited_wait "/usr/sbin/nginx -t -c '${CONF}' -g '${G_OPTS}'" &&
		logger -s -t "nginx_init" -p "daemon.info" "${success}" &&
		return

		echo -e "${message}\nNOT using configuration file!" \
		| logger -s -t "nginx_init" -p "daemon.err"
		echo "show configuration to be used by: nginx -T -c '${CONF}'"
		exit 1
	}

	logger -t "nginx_init" -p "daemon.info" "${success}"
}


start_service() {
	nginx_init

	procd_open_instance
	procd_set_param command /usr/sbin/nginx -c "${CONF}" -g "${G_OPTS}"
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param file "${LAN_LISTEN}" "${LAN_LISTEN}.default" \
		"${CONF}" "${CONF_DIR}*.conf" "${CONF_DIR}*.locations"
	[ "${LAN_SSL_LISTEN}" = "" ] ||
	procd_append_param file "${CONF_DIR}*.crt" "${CONF_DIR}*.key" \
		"${LAN_SSL_LISTEN}" "${LAN_SSL_LISTEN}.default"
	procd_set_param respawn
	procd_close_instance
}


stop_service() {
	rm -f "${LAN_LISTEN}" "${LAN_LISTEN}.default"
	[ "${LAN_SSL_LISTEN}" = "" ] ||
	rm -f "${LAN_SSL_LISTEN}" "${LAN_SSL_LISTEN}.default"
}


service_triggers() {
	procd_add_reload_interface_trigger loopback
	procd_add_reload_interface_trigger lan
}


reload_service() {
	nginx_init

	if [ "$(cat "/proc/$(cat "/var/run/nginx.pid")/cmdline")" = \
	     "nginx: master process /usr/sbin/nginx -c ${CONF} -g ${G_OPTS}" ]
	then procd_send_signal nginx
	else restart
	fi
}


relog() {
	[ -d /var/log/nginx ] || mkdir -p /var/log/nginx
	procd_send_signal nginx '*' USR1
}


EXTRA_COMMANDS="relog"
EXTRA_HELP="	relog	Reopen log files (without reloading)"
